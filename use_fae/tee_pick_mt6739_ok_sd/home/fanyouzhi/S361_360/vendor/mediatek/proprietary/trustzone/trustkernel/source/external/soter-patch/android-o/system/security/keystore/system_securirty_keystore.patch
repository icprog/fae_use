From 36b411dfc5c5316dbdbebec9257284b32b3f9723 Mon Sep 17 00:00:00 2001
From: zhangzs <zhangzs@trustkernel.com>
Date: Mon, 11 Jun 2018 17:14:49 +0800
Subject: [PATCH] patch for soter

---
 Android.mk            | 10 ++++++++++
 key_store_service.cpp | 18 +++++++++++++++++-
 key_store_service.h   |  7 +++++++
 3 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/Android.mk b/Android.mk
index 7dd5aef..da84c53 100644
--- a/Android.mk
+++ b/Android.mk
@@ -45,6 +45,16 @@ LOCAL_SRC_FILES := \
 	user_state.cpp \
 	grant_store.cpp \
 	../../../frameworks/base/core/java/android/security/keymaster/IKeyAttestationApplicationIdProvider.aidl
+
+ifeq ($(strip $(MTK_SOTER_SUPPORT)), yes)
+
+LOCAL_SRC_FILES += \
+    ../../../vendor/mediatek/proprietary/system/security/keystore_soterutils/keystore_soterutils.cpp
+
+LOCAL_CFLAGS += -DSOTER
+
+endif
+
 LOCAL_SHARED_LIBRARIES := \
 	libbinder \
 	libcutils \
diff --git a/key_store_service.cpp b/key_store_service.cpp
index f6786b8..bde3e29 100644
--- a/key_store_service.cpp
+++ b/key_store_service.cpp
@@ -714,7 +714,12 @@ KeyStoreServiceReturnCode KeyStoreService::generateKey(const String16& name,
 
     bool usingFallback = false;
     auto& dev = mKeyStore->getDevice();
+#ifdef SOTER
+    const hidl_vec<KeyParameter> newParams = acquireSoterParams(mKeyStore, params, uid);
+    AuthorizationSet keyCharacteristics = newParams;
+#else
     AuthorizationSet keyCharacteristics = params;
+#endif
 
     // TODO: Seed from Linux RNG before this.
     rc = addRngEntropy(entropy);
@@ -738,15 +743,22 @@ KeyStoreServiceReturnCode KeyStoreService::generateKey(const String16& name,
         Blob keyBlob(&hidlKeyBlob[0], hidlKeyBlob.size(), NULL, 0, ::TYPE_KEYMASTER_10);
         keyBlob.setFallback(usingFallback);
         keyBlob.setCriticalToDeviceEncryption(flags & KEYSTORE_FLAG_CRITICAL_TO_DEVICE_ENCRYPTION);
+#ifdef SOTER
+        if (isAuthenticationBound(newParams) && !keyBlob.isCriticalToDeviceEncryption()) {
+#else
         if (isAuthenticationBound(params) && !keyBlob.isCriticalToDeviceEncryption()) {
+#endif
             keyBlob.setSuperEncrypted(true);
         }
         keyBlob.setEncrypted(flags & KEYSTORE_FLAG_ENCRYPTED);
 
         error = mKeyStore->put(filename.string(), &keyBlob, get_user_id(uid));
     };
-
+#ifdef SOTER
+    rc = KS_HANDLE_HIDL_ERROR(dev->generateKey(newParams, hidl_cb));
+#else
     rc = KS_HANDLE_HIDL_ERROR(dev->generateKey(params, hidl_cb));
+#endif
     if (!rc.isOk()) {
         return rc;
     }
@@ -757,7 +769,11 @@ KeyStoreServiceReturnCode KeyStoreService::generateKey(const String16& name,
         if (!fallback.isOk()) {
             return error;
         }
+#ifdef SOTER
+        rc = KS_HANDLE_HIDL_ERROR(fallback.value()->generateKey(newParams, hidl_cb));
+#else
         rc = KS_HANDLE_HIDL_ERROR(fallback.value()->generateKey(params, hidl_cb));
+#endif
         if (!rc.isOk()) {
             return rc;
         }
diff --git a/key_store_service.h b/key_store_service.h
index 4060bd1..99a9b66 100644
--- a/key_store_service.h
+++ b/key_store_service.h
@@ -256,4 +256,11 @@ class KeyStoreService : public android::BnKeystoreService, public android::IBind
 
 };  // namespace keystore
 
+#ifdef SOTER
+
+keystore::hidl_vec<keystore::KeyParameter> acquireSoterParams(::KeyStore *mKeyStore,
+                                                              const keystore::hidl_vec<keystore::KeyParameter>& params,
+                                                              uid_t uid);
+#endif
+
 #endif  // KEYSTORE_KEYSTORE_SERVICE_H_
-- 
2.7.4

